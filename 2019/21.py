from Intcode import Intcode,load_intcode
from itertools import product

VERBOSE=True

CODE=load_intcode("21.txt")

class Ascii(Intcode):
    def __init__(self, stdin=''):
        super().__init__(CODE)
        del self._out_q
        del self._in_q
        self.out=""
        self.stdin=iter(stdin)
    def _4(s):
        if s.out[-2:]=="\n\n":
            if VERBOSE: print(s.out);s.out=''
        try:
            s.out+=chr(s._code[s.par(1)])
        except ValueError:
            print('Non ASCII Value:',s._code[s.par(1)])
        s._i+=2
    def _3(s):
        try:
            s._code[s.par(1)]=ord(next(s.stdin))
        except StopIteration:
            s.awaiting_input=True
        s._i+=2

springscript="""
OR A T
AND B T
AND C T
NOT T T
OR D J
AND T J
WALK
""".lstrip()
springdroid = Ascii(springscript)
springdroid.run()

# Every spring script command
#instructions = ['AND','OR','NOT']
#r_regs = 'ABCD'
#rw_regs = 'JT'

#walk_script_set = [f"{i} {r} {w}" for i,r,w in product(instructions,r_regs,rw_regs)]
#for l in range(1,16):
    #for steps in product(walk_script_set,repeat=l):
        #springscript = '\n'.join(steps)+'\nWALK\n'
        #springdroid = Ascii(springscript)
        #springdroid.run()

#quit()
#-----------------------Part 2----------------------
print('\n\n'+'-'*30+' Part 2 '+'-'*30)

def jump_or_no_jump(pattern):
    if pattern[1]=='.':return True
    if pattern[4]=='.':return False

def plausible_state(o):
    #o=list(o)
    #for i in range(1,9):
        ## Effective dots - unreachable platforms
        #if o[i]=='#' and o[i-1]=='.' and (i>=4 and o[i-4]=='.'):
            #o[i]='.'
    #o=''.join(o)
    if '.'*4 in o: return False # No big gaps
    if o[0]=='.'==o[3]: return False # Can't move, can't jump
    #if o[4]=='.'==o[7]: return False # ____.__. Can't move next turn
    
    return True

#t=str.maketrans('01','.#')
#for i in range(1,2**9):
    #o=f"{i:09b}".translate(t)
    #if o[0]=='.' or o[3]=='.': continue  # Hide the trivial cases
    #if plausible_state(o):  # Any gaps larger than 3 are impossible
        #print(o+(' J.' if o[0]=='.' else'')+  # Next is hole: must jump
                #(' N*' if o[3]=='.' else'')+  # Target is hole: must not jump
                #(' J...' if o[4:7]=='...' else'')+  # Big gap after: must jump
                #(' J..' if o[1]=='.'==o[4] else'')+ # Would be stuck after step
                #(' Jn#..' if o[3:6]=='#..' else'')+ # Must jump next but can't
                #(' J#..' if o[:4]=='#..#' else'')+ # Just to be safe
                #(' Nj' if o[4]=='.'==o[7] else'')+  # Would be stuck after jump
                #(' J1' if o[3]=='#' and o[1]=='.' and o[4]=='.' else'')+
                #(' J2' if o[3]=='#' and o[2]=='.' and o[5]=='.' else'')+
                #(' J3' if o[3]=='#' and o[3]=='.' and o[6]=='.' else'')+
                 #'')
        #print(end=o)
        #if o[4]=='.':print(end=' J')
        #print()

# Every spring script command
#r_regs = 'ABCDEFGHIJT'
#run_script_set = [f"{i} {r} {w}" for i,r,w in product(instructions,r_regs,rw_regs)]

#NOT T T
#AND A T
#AND B T
#AND C T
#NOT T T
#OR D J
#AND T J
#RUN

#OR G T
#OR F T
#AND B T
#OR E T
#AND A T
#NOT T J
#RUN
# ##.#..##.

#OR D J
#OR A T
#AND B T
#AND C T
#NOT T T
#AND T J
#RUN

#NOT A J
#AND D J
#OR C T
#OR E T
#AND T J
#RUN

# https://www.reddit.com/r/adventofcode/comments/edll5a/comment/fr1r0lt/
springscript2="""
NOT B J 
NOT C T
OR T J
AND D J
AND H J
NOT A T
OR T J 
RUN
""".lstrip()
springdroid2 = Ascii(springscript2)
springdroid2.run()
print(springdroid2.out)

"""
012345678
ABCDEFGHI
...#...#. J. J... J..
...#...## J. J... J..
...#..##. J. J..
...#..### J. J..
...#.#.#. J. J..
...#.#.## J. J..
...#.###. J. J..
...#.#### J. J..
...##...# J.
...##..#. J.
...##..## J.
...##.#.# J.
...##.##. J.
...##.### J.
...###... J.
...###..# J.
...###.#. J.
...###.## J.
...####.. J.
...####.# J.
...#####. J.
...###### J.
..##...#. J. J... J..
..##...## J. J... J..
..##..##. J. J..
..##..### J. J..
..##.#.#. J. J..
..##.#.## J. J..
..##.###. J. J..
..##.#### J. J..
..###...# J.
..###..#. J.
..###..## J.
..###.#.. J.
..###.#.# J.
..###.##. J.
..###.### J.
..####... J.
..####..# J.
..####.#. J.
..####.## J.
..#####.. J.
..#####.# J.
..######. J.
..####### J.
.#.#...#. J. J...
.#.#...## J. J...
.#.#..##. J.
.#.#..### J.
.#.#.#.#. J.
.#.#.#.## J.
.#.#.###. J.
.#.#.#### J.
.#.##...# J.
.#.##..#. J.
.#.##..## J.
.#.##.#.# J.
.#.##.##. J.
.#.##.### J.
.#.###... J.
.#.###..# J.
.#.###.#. J.
.#.###.## J.
.#.####.. J.
.#.####.# J.
.#.#####. J.
.#.###### J.
.###...#. J. J...
.###...## J. J...
.###..##. J.
.###..### J.
.###.#.#. J.
.###.#.## J.
.###.###. J.
.###.#### J.
.####...# J.
.####..#. J.
.####..## J.
.####.#.. J.
.####.#.# J.
.####.##. J.
.####.### J.
.#####... J.
.#####..# J.
.#####.#. J.
.#####.## J.
.######.. J.
.######.# J.
.#######. J.
.######## J.
#...#...# N*
#...#..## N*
#...#.#.# N*
#...#.### N*
#...##... N*
#...##..# N*
#...##.#. N*
#...##.## N*
#...###.. N*
#...###.# N*
#...####. N*
#...##### N*
#..#...#. J... J..
#..#...## J... J..
#..#..##. J..
#..#..### J..
#..#.#.#. J..
#..#.#.## J..
#..#.###. J..
#..#.#### J..
#..##...#
#..##..#.
#..##..##
#..##.#.#
#..##.##.
#..##.###
#..###...
#..###..#
#..###.#.
#..###.##
#..####..
#..####.#
#..#####.
#..######
#.#...##. N* J..
#.#...### N* J..
#.#..###. N* J..
#.#..#### N* J..
#.#.#...# N*
#.#.#..## N*
#.#.#.#.. N*
#.#.#.#.# N*
#.#.#.##. N*
#.#.#.### N*
#.#.##... N*
#.#.##..# N*
#.#.##.#. N*
#.#.##.## N*
#.#.###.. N*
#.#.###.# N*
#.#.####. N*
#.#.##### N*
#.##...#. J... J..
#.##...## J... J..
#.##..##. J..
#.##..### J..
#.##.#.#. J..
#.##.#.## J..
#.##.###. J..
#.##.#### J..
#.###...#
#.###..#.
#.###..##
#.###.#..
#.###.#.#
#.###.##.
#.###.###
#.####...
#.####..#
#.####.#.
#.####.##
#.#####..
#.#####.#
#.######.
#.#######
##...###. N*
##...#### N*
##..#...# N*
##..#..## N*
##..#.#.# N*
##..#.### N*
##..##... N*
##..##..# N*
##..##.#. N*
##..##.## N*
##..###.. N*
##..###.# N*
##..####. N*
##..##### N*
##.#...#. J...
##.#...## J...
##.#..##.
##.#..###
##.#.#.#.
##.#.#.##
##.#.###.
##.#.####
##.##...#
##.##..#.
##.##..##
##.##.#.#
##.##.##.
##.##.###
##.###...
##.###..#
##.###.#.
##.###.##
##.####..
##.####.#
##.#####.
##.######
###...##. N*
###...### N*
###..###. N*
###..#### N*
###.#...# N*
###.#..## N*
###.#.#.. N*
###.#.#.# N*
###.#.##. N*
###.#.### N*
###.##... N*
###.##..# N*
###.##.#. N*
###.##.## N*
###.###.. N*
###.###.# N*
###.####. N*
###.##### N*
####...#. J...
####...## J...
####..##.
####..###
####.#.#.
####.#.##
####.###.
####.####
#####...#
#####..#.
#####..##
#####.#..
#####.#.#
#####.##.
#####.###
######...
######..#
######.#.
######.##
#######..
#######.#
########.
#########
"""

# Excludes trivial A' and D' cases
# Jump, Either, or Not (Either will probably be jump)
"""
#..#...#. J
#..#...## J
#..#..##. J
#..#..### J
#..#.#.#. J
#..#.#.## J
#..#.###. J
#..#.#### J
#..##...# E
#..##..#. J
#..##..## J
#..##.#.# E
#..##.##. J
#..##.### J
#..###... E
#..###..# E
#..###.#. J
#..###.## J
#..####.. E
#..####.# E
#..#####. E
#..###### E
#.##...#. J
#.##...## J
#.##..#.. J
#.##..#.# J
#.##..##. J
#.##..### J
#.##.#.#. J
#.##.#.## J
#.##.##.. J
#.##.##.# J
#.##.###. J
#.##.#### J
#.###...# E
#.###..#. J
#.###..## J
#.###.#.. Invalid
#.###.#.# E
#.###.##. J
#.###.### J
#.####... E
#.####..# E
#.####.#. J
#.####.## J
#.#####.. E
#.#####.# E
#.######. E
#.####### E
##.#...#. J
##.#...## J
##.#..##. J
##.#..### J
##.#.#... J
##.#.#..# J
##.#.#.#. J
##.#.#.## J
##.#.##.. J
##.#.##.# J
##.#.###. J
##.#.#### J
##.##...# E
##.##..#. J
##.##..## E
##.##.#.# E
##.##.##. J
##.##.### J
##.###... E
##.###..# E
##.###.#. J
##.###.## J
##.####.. J
##.####.# E
##.#####. J
##.###### J
####...#. J
####...## J
####..#.. J
####..#.# J
####..##. J
####..### J
####.#... J
####.#..# J
####.#.#. J
####.#.## J
####.##.. J
####.##.# J
####.###. J
####.#### J
#####...# E (N)
#####..#. E (N)
#####..## E (N)
#####.#.. N
#####.#.# N
#####.##. N
#####.### N
######... E (N)
######..# E (N)
######.#.
######.##
#######..
#######.#
########.
#########
"""

"""
#..#...#. J
#..#...## J
#..#..#.. J
#..#..#.# J
#..#..##. J
#..#..### J
#..#.#... J
#..#.#..# J
#..#.#.#. J
#..#.#.## J
#..#.##.. J
#..#.##.# J
#..#.###. J
#..#.#### J
#..##...#
#..##..#.
#..##..##
#..##.#..
#..##.#.#
#..##.##.
#..##.###
#..###...
#..###..#
#..###.#.
#..###.##
#..####..
#..####.#
#..#####.
#..######
#.##...#. J
#.##...## J
#.##..#.. J
#.##..#.# J
#.##..##. J
#.##..### J
#.##.#... J
#.##.#..# J
#.##.#.#. J
#.##.#.## J
#.##.##.. J
#.##.##.# J
#.##.###. J
#.##.#### J
#.###...#
#.###..#.
#.###..##
#.###.#..
#.###.#.#
#.###.##.
#.###.###
#.####...
#.####..#
#.####.#.
#.####.##
#.#####..
#.#####.#
#.######.
#.#######
##.#...#. J
##.#...## J
##.#..#.. J
##.#..#.# J
##.#..##. J
##.#..### J
##.#.#... J
##.#.#..# J
##.#.#.#. J
##.#.#.## J
##.#.##.. J
##.#.##.# J
##.#.###. J
##.#.#### J
##.##...#
##.##..#.
##.##..##
##.##.#..
##.##.#.#
##.##.##.
##.##.###
##.###...
##.###..#
##.###.#.
##.###.##
##.####..
##.####.#
##.#####.
##.######
####...#. J
####...## J
####..#.. J
####..#.# J
####..##. J
####..### J
####.#... J
####.#..# J
####.#.#. J
####.#.## J
####.##.. J
####.##.# J
####.###. J
####.#### J
#####...#
#####..#.
#####..##
#####.#..
#####.#.#
#####.##.
#####.###
######...
######..#
######.#.
######.##
#######..
#######.#
########.
#########
"""

hand_filtered='''
#..#...#. J
#..#...## J
#..#..#.. I
#..#..#.# I
#..#..##. J
#..#..### J
#..#.#... I
#..#.#..# I
#..#.#.#. J
#..#.#.## J
#..#.##.. I
#..#.##.# I
#..#.###. J
#..#.#### J
#..##...# J E
#..##..#. J
#..##..## J
#..##.#.. I
#..##.#.# J
#..##.##. J
#..##.### J
#..###... J E
#..###..# J E
#..###.#. J
#..###.## J
#..####.. J E
#..####.# J E
#..#####. J E
#..###### J E
#.##...#. J
#.##...## J
#.##..#.. I
#.##..#.# I
#.##..##. J (I)
#.##..### J (I)
#.##.#... I
#.##.#..# I
#.##.#.#. J
#.##.#.## J
#.##.##.. I
#.##.##.# I
#.##.###. J (I)
#.##.#### J (I)
#.###...# J E
#.###..#. J
#.###..## J
#.###.#.. I
#.###.#.# J (I)
#.###.##. J (I)
#.###.### J (I)
#.####... J
#.####..# J E
#.####.#. J
#.####.## J
#.#####.. J E
#.#####.# J E
#.######. J E
#.####### J E
##.#...#. J
##.#...## J
##.#..#.. I
##.#..#.# I
##.#..##. J
##.#..### J
##.#.#... N - First N
##.#.#..# N
##.#.#.#. Indeterminate
##.#.#.## J (Probably)
##.#.##.. N
##.#.##.# N
##.#.###. N
##.#.#### N (Probably)
##.##...# J E
##.##..#. J
##.##..## J
##.##.#.. I
##.##.#.# J E
##.##.##. J
##.##.### J (E?)
##.###... J E
##.###..# J E
##.###.#. J
##.###.## J
##.####.. J (E?)
##.####.# J
##.#####. J E
##.###### J
####...#. N E
####...## N E
####..#.. N
####..#.# N
####..##. N
####..### N
####.#... N
####.#..# N
####.#.#. N
####.#.## N
####.##.. N
####.##.# N
####.###. N
####.#### N
#####...# N E
#####..#. N E
#####..## N E
#####.#.. N
#####.#.# N
#####.##. N
#####.### N
######... N E
######..# N E
######.#. N E
######.## N E
#######.. N E
#######.# N E
########. N E
######### N E
'''